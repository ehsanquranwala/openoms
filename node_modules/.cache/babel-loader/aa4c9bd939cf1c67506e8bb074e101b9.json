{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nms\\\\Desktop\\\\fish\\\\openoms\\\\src\\\\components\\\\dropdown.js\";\nimport { render } from \"@testing-library/react\";\nimport React from \"react\";\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Child({\n  value2,\n  sendToServer\n}) {\n  const onChange = (currentNode, selectedNodes) => {\n    // console.log('onChange::',  currentNode)\n    sendToServer(currentNode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropdownTreeSelect, {\n    data: value2,\n    onChange: onChange,\n    showDropdown: \"always\",\n    hierarchical: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Child;\nexport default _c2 = /*#__PURE__*/React.memo(Child);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/nms/Desktop/fish/openoms/src/components/dropdown.js"],"names":["render","React","DropdownTreeSelect","Child","value2","sendToServer","onChange","currentNode","selectedNodes","memo"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAf,EAAuC;AACnC,QAAMC,QAAQ,GAAG,CAACC,WAAD,EAAcC,aAAd,KAAgC;AAC9C;AAEGH,IAAAA,YAAY,CAACE,WAAD,CAAZ;AACH,GAJH;;AAME,sBACF,QAAC,kBAAD;AACA,IAAA,IAAI,EAAEH,MADN;AAEA,IAAA,QAAQ,EAAEE,QAFV;AAGA,IAAA,YAAY,EAAC,QAHb;AAIA,IAAA,YAAY,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,UADE;AASL;;KAhBQH,K;AAkBT,kCAAeF,KAAK,CAACQ,IAAN,CAAWN,KAAX,CAAf","sourcesContent":["import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\r\n\r\nfunction Child({value2, sendToServer}) {\r\n    const onChange = (currentNode, selectedNodes) => {\r\n       // console.log('onChange::',  currentNode)\r\n        \r\n          sendToServer(currentNode) \r\n      }\r\n \r\n      return(\r\n    <DropdownTreeSelect\r\n    data={value2} \r\n    onChange={onChange}\r\n    showDropdown='always'\r\n    hierarchical={true}\r\n    />\r\n      );\r\n  \r\n}\r\n\r\nexport default React.memo(Child);"]},"metadata":{},"sourceType":"module"}