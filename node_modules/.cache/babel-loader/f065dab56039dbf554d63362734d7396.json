{"ast":null,"code":"import _classCallCheck from\"C:/Users/nms/Desktop/fish/cowmandi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/nms/Desktop/fish/cowmandi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/nms/Desktop/fish/cowmandi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/nms/Desktop/fish/cowmandi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Link}from\"react-router-dom\";import SecureLS from'secure-ls';import{connect}from\"react-redux\";import{DataGrid}from'@material-ui/data-grid';import{Card,CardImg,CardBody,CardTitle,Container,Row,Button,Col,Label,Modal,ModalHeader,ModalBody,ModalFooter}from'reactstrap';import{products,addtocart,category,addArticle,user,selectProduct}from\"../js/actions/index\";import{jsx as _jsx}from\"react/jsx-runtime\";var ls=new SecureLS({encodingType:'aes'});var token=ls.get('token');var Cart=/*#__PURE__*/function(_React$Component){_inherits(Cart,_React$Component);var _super=_createSuper(Cart);function Cart(props){var _this;_classCallCheck(this,Cart);_this=_super.call(this,props);_this.state={data:[]};return _this;}_createClass(Cart,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.props.product.map(function(product){var Taste_Class='';if(product.filter.Taste_Class==1){Taste_Class='Lesser';}else if(product.filter.Taste_Class==2){Taste_Class='Normal';}else if(product.filter.Taste_Class==3){Taste_Class='Good';}else if(product.filter.Taste_Class==4){Taste_Class='Best';}else{Taste_Class='Normal';}var Thorns='';if(product.filter.Thorns==1){Thorns='Many';}else if(product.filter.Thorns==2){Thorns='Few';}else if(product.filter.Thorns==3){Thorns='One';}else if(product.filter.Thorns==0){Thorns='None';}else{Thorns='Normal';}var Meat_Whiteness='';if(product.filter.Meat_Whiteness==1){Meat_Whiteness='Very Light';}else if(product.filter.Meat_Whiteness==2){Meat_Whiteness='Light';}else if(product.filter.Meat_Whiteness==3){Meat_Whiteness='Dark';}else{Meat_Whiteness='Normal';}var Size='';if(product.filter.Size==1){Size='tiny';}else if(product.filter.Size==2){Size='small';}else if(product.filter.Size==3){Size='medium';}else if(product.filter.Size==4){Size='large';}else if(product.filter.Size==5){Size='extra large';}else{Size='medium';}var Salt_Water='';if(product.filter.Salt_Water==1){Salt_Water='Salt';}else{Salt_Water='Fresh';}var bestfor='';if(product.filter.Whole_Fry==1){bestfor='Whole Fry';}else if(product.filter.Piece_Fry==1){bestfor='Piece Fry';}else if(product.filter.Fillets==1){bestfor='Fillets';}else if(product.filter.Whole_Fry==1){bestfor='Whole Fry';}else if(product.filter.Grill==1){bestfor='Grill';}else if(product.filter.Salan==1){bestfor='Salan';}else if(product.filter.Biryani==1){bestfor='Biryani';}else if(product.filter.Soup==1){bestfor='Soup';}else{bestfor='none';}_this2.state.data.push({id:product.product.id,Taste_Class:Taste_Class,Product:product.product.name,Thorns:Thorns,Meat_Whiteness:Meat_Whiteness,Net_Wt_Fillets_Min:product.filter.Net_Wt_Fillets_Min,Net_Wt_Steaks_Min:product.filter.Net_Wt_Fillets_Min,Price:product.average.total_retail_price,Local_Grouping:product.filter.Local_Grouping,Foreign_Names:product.filter.Foreign_Names,Foreign_Grouping:product.filter.Foreign_Grouping,Salt_Water:Salt_Water,Urdu:product.filter.Urdu,Size:Size,bestfor:bestfor});});}},{key:\"render\",value:function render(){var columns=[{field:'Foreign_Names',headerName:'Fish Name(foreign)',width:200,hide:true},{field:'Foreign_Grouping',headerName:'Group',width:100,hide:true},{field:'Product',headerName:'Fish Name(local)',width:200,type:'string'},{field:'Urdu',headerName:'Urdu',width:100},{field:'Local_Grouping',headerName:'Group',width:100,type:'string'},{field:'Taste_Class',headerName:'Taste',width:90},{field:'Thorns',headerName:'Thorns',width:100},{field:'Meat_Whiteness',headerName:'Meat Color',width:100},{field:'Net_Wt_Fillets_Min',headerName:'Fillets(Net Wt/kg)',width:105},{field:'Net_Wt_Steaks_Min',headerName:'Steaks(Net Wt/kg)',width:110},{field:'Price',width:100},{field:'Meat_Whiteness',headerName:'Color(meat)',width:105},{field:'Salt_Water',headerName:'Water',width:90},{field:'Size',headerName:'Size',width:90},{field:'bestfor',headerName:'Best For',width:120}];var rows=this.state.data;return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{style:{height:800},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,rowHeight:25})})})});}}]);return Cart;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{product:state.product};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{};};export default connect(mapStateToProps,mapDispatchToProps)(Cart);","map":{"version":3,"sources":["C:/Users/nms/Desktop/fish/cowmandi/src/components/PriceList.js"],"names":["React","Link","SecureLS","connect","DataGrid","Card","CardImg","CardBody","CardTitle","Container","Row","Button","Col","Label","Modal","ModalHeader","ModalBody","ModalFooter","products","addtocart","category","addArticle","user","selectProduct","ls","encodingType","token","get","Cart","props","state","data","product","map","Taste_Class","filter","Thorns","Meat_Whiteness","Size","Salt_Water","bestfor","Whole_Fry","Piece_Fry","Fillets","Grill","Salan","Biryani","Soup","push","id","Product","name","Net_Wt_Fillets_Min","Net_Wt_Steaks_Min","Price","average","total_retail_price","Local_Grouping","Foreign_Names","Foreign_Grouping","Urdu","columns","field","headerName","width","hide","type","rows","height","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n  import { Link } from \"react-router-dom\";\r\n  import SecureLS from 'secure-ls';\r\n  import { connect } from \"react-redux\";\r\n  import { DataGrid } from '@material-ui/data-grid';\r\n  import { Card, CardImg, CardBody,\r\n    CardTitle, Container,Row,Button,Col,Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\n  import { products, addtocart, category,addArticle,user ,selectProduct} from \"../js/actions/index\";\r\n  var ls = new SecureLS({encodingType: 'aes'});\r\n  const token=ls.get('token')\r\n class Cart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n                    data:[]\r\n                    };\r\n    }\r\n    \r\n    componentDidMount(){\r\n   this.props.product.map((product)=>{\r\n     var Taste_Class='';\r\n     if(product.filter.Taste_Class==1){Taste_Class='Lesser'}\r\n     else if(product.filter.Taste_Class==2){Taste_Class='Normal'}\r\n     else if(product.filter.Taste_Class==3){Taste_Class='Good'}\r\n     else if(product.filter.Taste_Class==4){Taste_Class='Best'}\r\n     else{Taste_Class='Normal'}\r\n     var Thorns='';\r\n     if(product.filter.Thorns==1){Thorns='Many'}\r\n     else if(product.filter.Thorns==2){Thorns='Few'}\r\n     else if(product.filter.Thorns==3){Thorns='One'}\r\n     else if(product.filter.Thorns==0){Thorns='None'}\r\n     else{Thorns='Normal'}\r\n     var Meat_Whiteness='';\r\n     if(product.filter.Meat_Whiteness==1){Meat_Whiteness='Very Light'}\r\n     else if(product.filter.Meat_Whiteness==2){Meat_Whiteness='Light'}\r\n     else if(product.filter.Meat_Whiteness==3){Meat_Whiteness='Dark'}\r\n     else{Meat_Whiteness='Normal'}\r\n     var Size='';\r\n     if(product.filter.Size==1){Size='tiny'}\r\n     else if(product.filter.Size==2){Size='small'}\r\n     else if(product.filter.Size==3){Size='medium'}\r\n     else if(product.filter.Size==4){Size='large'}\r\n     else if(product.filter.Size==5){Size='extra large'}\r\n     else{Size='medium'}\r\n     var Salt_Water='';\r\n     if(product.filter.Salt_Water==1){Salt_Water='Salt'}else{Salt_Water='Fresh'}\r\n    var bestfor='';\r\n     if(product.filter.Whole_Fry==1){bestfor='Whole Fry'}\r\n     else if(product.filter.Piece_Fry==1){bestfor='Piece Fry'}\r\n     else if(product.filter.Fillets==1){bestfor='Fillets'}\r\n     else if(product.filter.Whole_Fry==1){bestfor='Whole Fry'}\r\n     else if(product.filter.Grill==1){bestfor='Grill'}\r\n     else if(product.filter.Salan==1){bestfor='Salan'}\r\n     else if(product.filter.Biryani==1){bestfor='Biryani'}\r\n     else if(product.filter.Soup==1){bestfor='Soup'}\r\n    else{bestfor='none'}\r\n            this.state.data.push({id:                  product.product.id,\r\n                                  Taste_Class:         Taste_Class,\r\n                                    Product:           product.product.name,\r\n                                    Thorns:             Thorns,\r\n                                    Meat_Whiteness:     Meat_Whiteness,\r\n                                    Net_Wt_Fillets_Min:  product.filter.Net_Wt_Fillets_Min,\r\n                                    Net_Wt_Steaks_Min:   product.filter.Net_Wt_Fillets_Min,\r\n                                  Price:                 product.average.total_retail_price,\r\n                                  Local_Grouping:      product.filter.Local_Grouping,\r\n                                  Foreign_Names:       product.filter.Foreign_Names,\r\n                                  Foreign_Grouping:    product.filter.Foreign_Grouping,\r\n                                  Salt_Water:         Salt_Water,\r\n                                  Urdu:                 product.filter.Urdu,\r\n                                  Size:              Size,\r\n                                bestfor:bestfor})\r\n   })\r\n    }\r\n\r\n    render() {\r\n      const columns = [\r\n        { field: 'Foreign_Names' ,headerName:'Fish Name(foreign)', width: 200,hide: true},\r\n        { field: 'Foreign_Grouping',headerName:'Group', width: 100  ,hide: true},\r\n       \r\n        { field: 'Product',headerName:'Fish Name(local)', width: 200 ,type:'string'},\r\n        { field: 'Urdu',headerName:'Urdu', width: 100 },\r\n        { field: 'Local_Grouping',headerName:'Group', width: 100 ,type:'string'},\r\n        { field: 'Taste_Class',headerName:'Taste', width: 90 },\r\n        { field: 'Thorns' ,headerName:'Thorns', width: 100},\r\n        { field: 'Meat_Whiteness',headerName:'Meat Color', width: 100 },\r\n        { field: 'Net_Wt_Fillets_Min' ,headerName:'Fillets(Net Wt/kg)', width: 105},\r\n        { field: 'Net_Wt_Steaks_Min',headerName:'Steaks(Net Wt/kg)', width: 110 },\r\n        { field: 'Price', width: 100 },\r\n        \r\n       \r\n        { field: 'Meat_Whiteness',headerName:'Color(meat)', width: 105 },\r\n        { field: 'Salt_Water' ,headerName:'Water', width: 90},\r\n        \r\n        { field: 'Size',headerName:'Size', width: 90 },\r\n        { field: 'bestfor',headerName:'Best For', width: 120 },\r\n      ];\r\n      \r\n      const rows = this.state.data\r\n      ;\r\n      \r\n      \r\n       return (\r\n       \r\n            <Row><Col>\r\n             <div style={{height:800}}>\r\n            <DataGrid rows={rows} \r\n            \r\n            columns={columns} rowHeight={25} />\r\n            </div>\r\n            </Col>\r\n            </Row>\r\n         \r\n       );\r\n    }\r\n }\r\n\r\n const mapStateToProps = state => {\r\n  return {\r\n    product: state.product,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n   \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cart);"]},"metadata":{},"sourceType":"module"}