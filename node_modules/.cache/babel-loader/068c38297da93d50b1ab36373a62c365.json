{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nms\\\\Desktop\\\\fish\\\\openoms\\\\src\\\\components\\\\Category.js\";\nimport React, { useState } from \"react\";\nimport { Button, Card, CardImg, CardBody, CardTitle, Container, Row, Col, Input, FormGroup, Label } from 'reactstrap';\nimport SecureLS from 'secure-ls';\nimport { connect } from \"react-redux\";\nimport { products, addtocart, category, addArticle, user } from \"../js/actions/index\";\nimport { SingleSlider } from 'react-slider-kit';\nimport Child from './dropdown';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ls = new SecureLS({\n  encodingType: 'aes'\n});\n\nvar fishData = require('../assets/fishdata.json');\n\nlet categories = [];\n\nclass Category extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: [],\n      catId: 0,\n      category: [],\n      value: 10,\n      fBone: 4,\n      Salt_Water: 2,\n      filter: [{\n        \"Thorns\": {\n          \"value\": 2\n        }\n      }],\n      appliedFilter: []\n    };\n  }\n\n  componentDidMount() {\n    categories = this.props.category;\n    this.filter();\n  }\n\n  filter() {\n    let {\n      filter\n    } = this.state;\n    let filtered = null;\n    fishData.map(fishData => {\n      var matchesAllFilters = true;\n      filter.map((filterName, filterValue) => {\n        var fishValue = fishData.Thorns;\n        console.log(\"fu data\", fishValue + \"  \" + filterValue);\n\n        if (filterValue != fishValue) {\n          matchesAllFilters = false;\n          return false;\n        }\n      });\n\n      if (matchesAllFilters) {\n        filtered = fishData;\n      }\n    });\n    console.log(filtered); //  this.setState({appliedFilter:filtered});\n  }\n\n  render() {\n    const {\n      value,\n      fBone,\n      filter,\n      appliedFilter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"themed-container\",\n        fluid: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"2\",\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                size: \"sm\",\n                children: \"Select Thorns/Bones:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"sm\",\n                type: \"select\",\n                required: true,\n                value: this.state.fBone,\n                onChange: e => {\n                  this.setState({\n                    fBone: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 4,\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 0,\n                  children: \"Many Bone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"one Bone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"small few Bone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 3,\n                  children: \"Boneless\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"2\",\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                size: \"sm\",\n                children: \"Select Salt Water:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"sm\",\n                type: \"select\",\n                required: true,\n                value: this.state.Salt_Water,\n                onChange: e => {\n                  this.setState({\n                    Salt_Water: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"All\"\n                }, 2, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 0,\n                  children: \"True\"\n                }, 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"false\"\n                }, 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Child, {\n              value2: categories,\n              sendToServer: e => this.setState({\n                catId: e\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SingleSlider, {\n              min: 0,\n              max: 100,\n              step: 1,\n              start: 80,\n              onChangeStart: () => console.log('start drag'),\n              onChange: value => console.log('drag value: ', value),\n              onChangeComplete: e => {\n                this.setState({\n                  value: e\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: appliedFilter.map(product => /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"4\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"#f6f6f6\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                      tag: \"h5\",\n                      children: [product.Local_Names, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n                      tag: \"h6\",\n                      children: [\"Rs. \", product.Urdu]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Fishes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: this.props.product.map(product => product.product.categories[0].id == this.state.catId.value ? /*#__PURE__*/_jsxDEV(Col, {\n                sm: \"4\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardBody, {\n                    style: {\n                      backgroundColor: \"#f6f6f6\"\n                    },\n                    children: [product.product.images[0] ? /*#__PURE__*/_jsxDEV(CardImg, {\n                      top: true,\n                      width: \"20%\",\n                      style: {\n                        width: 200,\n                        height: 150\n                      },\n                      src: product.product.images[0].src,\n                      alt: \"Fish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 26\n                    }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n                      tag: \"h5\",\n                      children: [product.product.slug, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n                      tag: \"h6\",\n                      color: \"blue\",\n                      children: [\"Rs. \", product.product.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 31\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    category: state.category,\n    product: state.product\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","map":{"version":3,"sources":["C:/Users/nms/Desktop/fish/openoms/src/components/Category.js"],"names":["React","useState","Button","Card","CardImg","CardBody","CardTitle","Container","Row","Col","Input","FormGroup","Label","SecureLS","connect","products","addtocart","category","addArticle","user","SingleSlider","Child","ls","encodingType","fishData","require","categories","Category","Component","constructor","props","state","product","catId","value","fBone","Salt_Water","filter","appliedFilter","componentDidMount","filtered","map","matchesAllFilters","filterName","filterValue","fishValue","Thorns","console","log","render","marginTop","e","setState","target","backgroundColor","Local_Names","Urdu","id","images","width","height","src","slug","price","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAsBC,OAAtB,EAAgCC,QAAhC,EACEC,SADF,EACaC,SADb,EACuBC,GADvB,EAC2BC,GAD3B,EAC+BC,KAD/B,EACqCC,SADrC,EAC+CC,KAD/C,QAC2D,YAD3D;AAEE,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAuCC,UAAvC,EAAkDC,IAAlD,QAA8D,qBAA9D;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,4CAAP;;AACA,IAAIC,EAAE,GAAG,IAAIT,QAAJ,CAAa;AAACU,EAAAA,YAAY,EAAE;AAAf,CAAb,CAAT;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,yBAAD,CAAtB;;AACD,IAAIC,UAAU,GAAC,EAAf;;AAGE,MAAMC,QAAN,SAAuB3B,KAAK,CAAC4B,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAC,EAAT;AACCC,MAAAA,KAAK,EAAC,CADP;AAEChB,MAAAA,QAAQ,EAAC,EAFV;AAGCiB,MAAAA,KAAK,EAAC,EAHP;AAICC,MAAAA,KAAK,EAAC,CAJP;AAKCC,MAAAA,UAAU,EAAC,CALZ;AAMCC,MAAAA,MAAM,EAAC,CAAC;AAAC,kBAAS;AAAC,mBAAQ;AAAT;AAAV,OAAD,CANR;AAOCC,MAAAA,aAAa,EAAC;AAPf,KAAb;AASc;;AAChBC,EAAAA,iBAAiB,GAAE;AACjBb,IAAAA,UAAU,GAAC,KAAKI,KAAL,CAAWb,QAAtB;AACA,SAAKoB,MAAL;AACD;;AACDA,EAAAA,MAAM,GAAE;AACN,QAAI;AAACA,MAAAA;AAAD,QAAS,KAAKN,KAAlB;AACA,QAAIS,QAAQ,GAAC,IAAb;AACAhB,IAAAA,QAAQ,CAACiB,GAAT,CAAcjB,QAAD,IAAc;AAC3B,UAAIkB,iBAAiB,GAAG,IAAxB;AACYL,MAAAA,MAAM,CAACI,GAAP,CAAW,CAAEE,UAAF,EAAaC,WAAb,KAA2B;AAEpC,YAAIC,SAAS,GAAGrB,QAAQ,CAACsB,MAAzB;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,SAAS,GAAC,IAAV,GAAeD,WAArC;;AACY,YAAIA,WAAW,IAAIC,SAAnB,EAA8B;AAC5BH,UAAAA,iBAAiB,GAAG,KAApB;AACF,iBAAO,KAAP;AACG;AACR,OARD;;AASA,UAAIA,iBAAJ,EAAuB;AACrBF,QAAAA,QAAQ,GAAGhB,QAAX;AACD;AACV,KAdH;AAeEuB,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAlBI,CAoBN;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAeE,MAAAA,MAAf;AAAsBC,MAAAA;AAAtB,QAAuC,KAAKP,KAAlD;AAEA,wBAEE;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kBAArB;AAAwC,QAAA,KAAK,EAAC,IAA9C;AAAA,gCACA,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACI,QAAC,SAAD;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,IAAZ;AAAkB,gBAAA,IAAI,EAAC,QAAvB;AAAgC,gBAAA,QAAQ,EAAE,IAA1C;AAAgD,gBAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWI,KAAlE;AAA0E,gBAAA,QAAQ,EAAGgB,CAAD,IAAK;AAAE,uBAAKC,QAAL,CAAc;AAACjB,oBAAAA,KAAK,EAACgB,CAAC,CAACE,MAAF,CAASnB;AAAhB,mBAAd;AAAsC,iBAAjI;AAAA,wCACU;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADV,eAEU;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFV,eAGU;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHV,eAIU;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJV,eAKU;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACM,QAAC,SAAD;AAAA,sCACA,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEE,QAAC,KAAD;AAAQ,gBAAA,IAAI,EAAC,IAAb;AAAkB,gBAAA,IAAI,EAAC,QAAvB;AAAgC,gBAAA,QAAQ,EAAE,IAA1C;AAAgD,gBAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,UAAlE;AAA+E,gBAAA,QAAQ,EAAGe,CAAD,IAAK;AAAE,uBAAKC,QAAL,CAAc;AAAChB,oBAAAA,UAAU,EAACe,CAAC,CAACE,MAAF,CAASnB;AAArB,mBAAd;AAA2C,iBAA3I;AAAA,wCACQ;AAAgB,kBAAA,KAAK,EAAE,CAAvB;AAAA;AAAA,mBAAa,CAAb;AAAA;AAAA;AAAA;AAAA,wBADR,eAEQ;AAAgB,kBAAA,KAAK,EAAE,CAAvB;AAAA;AAAA,mBAAa,CAAb;AAAA;AAAA;AAAA;AAAA,wBAFR,eAGQ;AAAgB,kBAAA,KAAK,EAAE,CAAvB;AAAA;AAAA,mBAAa,CAAb;AAAA;AAAA;AAAA;AAAA,wBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,kBAdF,eAwBE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAwBoB,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAxBpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eA0BA,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,MAAM,EAAER,UADV;AAEE,cAAA,YAAY,EAAGyB,CAAD,IAAK,KAAKC,QAAL,CAAc;AAACnB,gBAAAA,KAAK,EAACkB;AAAP,eAAd;AAFrB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,YAAD;AACE,cAAA,GAAG,EAAE,CADP;AAEE,cAAA,GAAG,EAAE,GAFP;AAGE,cAAA,IAAI,EAAE,CAHR;AAIE,cAAA,KAAK,EAAE,EAJT;AAKE,cAAA,aAAa,EAAE,MAAMJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CALvB;AAME,cAAA,QAAQ,EAAGd,KAAD,IAASa,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bd,KAA5B,CANrB;AAOE,cAAA,gBAAgB,EAAGiB,CAAD,IAAK;AAAC,qBAAKC,QAAL,CAAc;AAAClB,kBAAAA,KAAK,EAACiB;AAAP,iBAAd;AAAyB;AAPnD;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBI,QAAC,GAAD;AAAA,oCACA,QAAC,GAAD;AAAA,wBACCb,aAAa,CAACG,GAAd,CAAmBT,OAAD,iBAEnB,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAC,GAAR;AAAA,uCACE,QAAC,IAAD;AAAA,yCACI,QAAC,QAAD;AAAW,oBAAA,KAAK,EAAE;AAACsB,sBAAAA,eAAe,EAAE;AAAlB,qBAAlB;AAAA,4CACE,QAAC,SAAD;AAAW,sBAAA,GAAG,EAAC,IAAf;AAAA,iCAAsBtB,OAAO,CAACuB,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,SAAD;AAAW,sBAAA,GAAG,EAAC,IAAf;AAAA,yCAA0BvB,OAAO,CAACwB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFC;AADD;AAAA;AAAA;AAAA;AAAA,oBADA,eAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfA,eAee,QAAC,GAAD;AAAA,wBAGd,KAAK1B,KAAL,CAAWE,OAAX,CAAmBS,GAAnB,CAAwBT,OAAD,IACxBA,OAAO,CAACA,OAAR,CAAgBN,UAAhB,CAA2B,CAA3B,EAA8B+B,EAA9B,IAAkC,KAAK1B,KAAL,CAAWE,KAAX,CAAiBC,KAAnD,gBACA,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAC,GAAR;AAAA,uCACE,QAAC,IAAD;AAAA,yCACI,QAAC,QAAD;AAAW,oBAAA,KAAK,EAAE;AAACoB,sBAAAA,eAAe,EAAE;AAAlB,qBAAlB;AAAA,+BACGtB,OAAO,CAACA,OAAR,CAAgB0B,MAAhB,CAAuB,CAAvB,iBACH,QAAC,OAAD;AAAS,sBAAA,GAAG,MAAZ;AAAa,sBAAA,KAAK,EAAC,KAAnB;AAAyB,sBAAA,KAAK,EAAE;AAACC,wBAAAA,KAAK,EAAC,GAAP;AAAWC,wBAAAA,MAAM,EAAC;AAAlB,uBAAhC;AAAwD,sBAAA,GAAG,EAAE5B,OAAO,CAACA,OAAR,CAAgB0B,MAAhB,CAAuB,CAAvB,EAA0BG,GAAvF;AAA4F,sBAAA,GAAG,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,4BADG,gBAEA;AAAA;AAAA;AAAA;AAAA,4BAHH,eAIE,QAAC,SAAD;AAAW,sBAAA,GAAG,EAAC,IAAf;AAAA,iCAAsB7B,OAAO,CAACA,OAAR,CAAgB8B,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,eAKA,QAAC,SAAD;AAAW,sBAAA,GAAG,EAAC,IAAf;AAAoB,sBAAA,KAAK,EAAC,MAA1B;AAAA,yCAAsC9B,OAAO,CAACA,OAAR,CAAgB+B,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,4BALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADA,gBAUc;AAAA;AAAA;AAAA;AAAA,sBAXb;AAHc;AAAA;AAAA;AAAA;AAAA,oBAff;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAiFD;;AA5HqC;;AA+HzC,MAAMC,eAAe,GAAGjC,KAAK,IAAI;AAChC,SAAO;AACLd,IAAAA,QAAQ,EAAEc,KAAK,CAACd,QADX;AAELe,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID,CALA;;AAOD,MAAMiC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO,EAAP;AAGD,CAJD;;AAMA,eAAepD,OAAO,CACpBkD,eADoB,EAEpBC,kBAFoB,CAAP,CAGbtC,QAHa,CAAf","sourcesContent":["import React,{useState} from \"react\";\r\nimport { Button,Card, CardImg,  CardBody,\r\n  CardTitle, Container,Row,Col,Input,FormGroup,Label} from 'reactstrap';\r\n  import SecureLS from 'secure-ls';\r\n  import { connect } from \"react-redux\";\r\n  import { products, addtocart, category,addArticle,user } from \"../js/actions/index\";\r\n  import {SingleSlider} from 'react-slider-kit';\r\n  import Child from './dropdown';\r\n  import 'react-dropdown-tree-select/dist/styles.css';\r\n  var ls = new SecureLS({encodingType: 'aes'});\r\n  var fishData = require('../assets/fishdata.json');\r\n let categories=[];\r\n\r\n \r\n   class Category extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {product:[],\r\n                    catId:0,\r\n                    category:[],\r\n                    value:10,\r\n                    fBone:4,\r\n                    Salt_Water:2,\r\n                    filter:[{\"Thorns\":{\"value\":2}}],\r\n                    appliedFilter:[]\r\n                  };\r\n                   }\r\n    componentDidMount(){\r\n      categories=this.props.category\r\n      this.filter()\r\n    }\r\n    filter(){\r\n      let {filter}=this.state;\r\n      let filtered=null;\r\n      fishData.map((fishData) => {\r\n      var matchesAllFilters = true;\r\n                  filter.map(( filterName,filterValue)=>{\r\n                    \r\n                    var fishValue = fishData.Thorns;\r\n            console.log(\"fu data\",fishValue+\"  \"+filterValue)\r\n                        if (filterValue != fishValue) {\r\n                          matchesAllFilters = false;\r\n                        return false;\r\n                          }\r\n                  })\r\n                  if (matchesAllFilters) {\r\n                    filtered = fishData;\r\n                  }\r\n        })\r\n        console.log(filtered)\r\n        \r\n      //  this.setState({appliedFilter:filtered});\r\n    }\r\n    render() {\r\n      const { value, fBone,filter,appliedFilter} = this.state\r\n    \r\n      return (\r\n\r\n        <div style={{marginTop:20}}>\r\n            <Container className=\"themed-container\" fluid=\"sm\" >\r\n            <Row>\r\n              <Col md='2'>\r\n                  <FormGroup>\r\n                    <Label size='sm'>Select Thorns/Bones:</Label>\r\n                    <Input size='sm'  type=\"select\" required={true} value={this.state.fBone}  onChange={(e)=>{ this.setState({fBone:e.target.value})}}>\r\n                              <option value={4}>All</option>\r\n                              <option value={0}>Many Bone</option>\r\n                              <option value={1}>one Bone</option>\r\n                              <option value={2}>small few Bone</option>\r\n                              <option value={3}>Boneless</option>\r\n                              \r\n                    </Input>\r\n                    </FormGroup>\r\n              </Col>\r\n              <Col md='2'>\r\n                    <FormGroup>\r\n                    <Label size='sm'>Select Salt Water:</Label>\r\n                      <Input  size='sm' type=\"select\" required={true} value={this.state.Salt_Water}  onChange={(e)=>{ this.setState({Salt_Water:e.target.value})}}>\r\n                              <option key={2} value={2}>All</option>\r\n                              <option key={0} value={0}>True</option>\r\n                              <option key={1} value={1}>false</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n              </Col>\r\n              <Col md='2'></Col><Col md='2'></Col></Row>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <Child\r\n                  value2={categories}\r\n                  sendToServer={(e)=>this.setState({catId:e})}\r\n                />\r\n                <SingleSlider\r\n                  min={0}\r\n                  max={100}\r\n                  step={1}\r\n                  start={80}\r\n                  onChangeStart={() => console.log('start drag')}\r\n                  onChange={(value)=>console.log('drag value: ', value)}\r\n                  onChangeComplete={(e)=>{this.setState({value:e})}}\r\n              />\r\n              </Col>\r\n                <Col>\r\n                <Row>\r\n                {appliedFilter.map((product) =>\r\n                 \r\n                <Col sm=\"4\">\r\n                  <Card>\r\n                      <CardBody  style={{backgroundColor: \"#f6f6f6\"}}>\r\n                        <CardTitle tag=\"h5\" >{product.Local_Names} </CardTitle>\r\n                        <CardTitle tag=\"h6\" >Rs. {product.Urdu}</CardTitle>\r\n                      </CardBody>\r\n                  </Card>\r\n                </Col>\r\n\r\n                )}\r\n                </Row>\r\n                <h5>Fishes</h5><Row>\r\n\r\n\r\n                {this.props.product.map((product) => \r\n                product.product.categories[0].id==this.state.catId.value? \r\n                <Col sm=\"4\">\r\n                  <Card>\r\n                      <CardBody  style={{backgroundColor: \"#f6f6f6\"}}>\r\n                        {product.product.images[0]?\r\n                      <CardImg top width=\"20%\" style={{width:200,height:150}} src={product.product.images[0].src} alt=\"Fish\" />\r\n                        :<div></div>}\r\n                        <CardTitle tag=\"h5\" >{product.product.slug} </CardTitle>\r\n                      <CardTitle tag=\"h6\" color=\"blue\">Rs. {product.product.price}</CardTitle>\r\n                  </CardBody>\r\n                </Card></Col>:<div></div>)}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n       );\r\n    }\r\n }\r\n\r\n const mapStateToProps = state => {\r\n  return {\r\n    category: state.category,\r\n    product: state.product\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Category);"]},"metadata":{},"sourceType":"module"}